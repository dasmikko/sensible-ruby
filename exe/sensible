#!/usr/bin/env ruby

SPEC = %(
  @ A small tool to manage and deploy projects

  Install and update systems much like ansible but using shell scripts. It uses
  a sensible.yml configuration file to control the process

  OPTIONS
    -e,env,environment=ENV
      Sets the environment (dev/prod/etc),

    -f,file=FILE
      Path to sensible configuration file

    -d,dir,directory=DIR
      Path to sensible directory. Default '.sensible'

    -v,verbose
      Verbose output

  COMMANDS
    check!
      Check the project for missing dependencies

    install!
      Install missing dependencies and requirements
    
    task.list!
      List tasks
    
    task.run! -- TASK
      Run a single task

    init!
      Create a new sensible configuration file
)

require_relative '../lib/sensible.rb'
require 'shellopts'

# Monkey patch where version_number is not fetched correctly in ruby 3.4.2
module ShellOpts
  class ShellOpts
    def version_number
      Sensible::VERSION
    end
  end
end

opts, args = ShellOpts::process(SPEC, ARGV)
cmd = opts.subcommand!
#cmd == :task! or args.expect(0) # Ensure no arguments except for task

if opts.verbose
  puts "Options"
  puts "  env: #{opts.env}"
  puts "  file: #{opts.file}"
  puts "  dir: #{opts.dir}"
  puts "  args: #{args}"
  # puts "Command: #{cmd.to_s.sub(/!$/, "")}"
end

sensible = Sensible::Sensible.new("sensible.yml", opts, args)

case opts.subcommand
  when :check!
    sensible.check
    #Sensible.check(opts.env, opts.file, opts.dir)
  when :install!
    sensible.install
  when :task!
    case cmd.subcommand
      when :list!; sensible.task_list
      when :run!
        arg = args.expect(1) # Expect a single argument to sensible task
        sensible.task_run(arg)
    end
    
    # TODO: Make task handling
  when :init!
    sensible.init
    # TODO: Make init handling
end

